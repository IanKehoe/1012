"""add additional fields to user model

Revision ID: b27dceadbd3d
Revises: 584e79e6f9fb
Create Date: 2024-12-13 19:51:59.008192

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision: str = 'b27dceadbd3d'
down_revision: Union[str, None] = '584e79e6f9fb'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # Create the enum type
    account_status_enum = postgresql.ENUM('standard', 'admin', 'suspended', 'banned', name='accountstatus')
    account_status_enum.create(op.get_bind())
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('first_name', sa.String(), nullable=True))
    op.add_column('users', sa.Column('last_name', sa.String(), nullable=True))
    op.add_column('users', sa.Column('date_created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.add_column('users', sa.Column('account_status', sa.Enum('standard', 'admin', 'suspended', 'banned', name='accountstatus'), nullable=True))
    op.add_column('users', sa.Column('type', sa.Integer(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'type')
    op.drop_column('users', 'account_status')
    op.drop_column('users', 'date_created')
    op.drop_column('users', 'last_name')
    op.drop_column('users', 'first_name')
    # ### end Alembic commands ###

     # Drop the enum type
    account_status_enum = postgresql.ENUM('standard', 'admin', 'suspended', 'banned', name='accountstatus')
    account_status_enum.drop(op.get_bind())
